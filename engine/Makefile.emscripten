#############################################
# Makefile.emscripten - Xash3D Emscripten port
# Copyright (C) 2017 mittorn

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
##############################################


CC = ~/emscripten/emcc --llvm-lto 3 -s INLINING_LIMIT=10 -s USE_SDL=2
CXX = ~/emscripten/em++ --llvm-lto 3 -s INLINING_LIMIT=10 -s USE_SDL=2
# async mode - produces very large scripts. Unuseful with shared libraries
ASYNC ?= 0

OUTPUT_DIR ?= xash-em

XASH_COMMIT := $(firstword $(shell git rev-parse --short=6 HEAD) unknown)

ifeq ($(XASH_COMMIT),unknown)
$(warning You seems to build xash3d without git)
$(warning Please use git if you are going to publish your build)
endif

# emscripten port only works with gl-wes-v2 (WebGL is GLES2)
WES = 1

ifeq ($(EMSCRIPTEN_SIMD),1)
 SIMD_SUF=-simd
 CC += -s SIMD=1
 CXX += -s SIMD=1
endif
CFLAGS =-Os -g0 -Wall -Wextra -Wsign-compare -Wno-unknown-pragmas -Wno-missing-field-initializers -Wno-unused-parameter
obj/common/launcher.o : override CFLAGS = -O0 -g0
LDFLAGS =
LIBS = -lm
LBITS := $(shell getconf LONG_BIT)
ifneq ($(64BIT),1)
	ifeq ($(LBITS),64)
		LDFLAGS += -m32
		CFLAGS += -m32
	endif
endif
TOPDIR = $(PWD)/..
INCLUDES :=
XASH_SINGLE_BINARY ?= 1
INSTALL_DIR ?= ./install/
ifeq ($(NANOGL),1)
INCLUDES += -Inanogl -Inanogl/GL
endif
ifeq ($(WES),1)
INCLUDES += -Inanogl -Inanogl/GL -Igl-wes-v2/src
endif
INCLUDES += -Icommon -I../common -I. -I../pm_shared -Iclient -Iserver -Iclient/vgui -Icommon/sdl

DEFINES = -DDEFAULT_DEV=5 -DXASH_SDL_DISABLE_RESIZE -DDEFAULT_MODE_WIDTH=640 -DDEFAULT_MODE_HEIGHT=480 -DDEFAULT_FULLSCREEN=0 -DWES_WEBGL -DXASH_ALLOW_SAVERESTORE_OFFSETS -DUSE_STB_SPRINTF=0 -DNO_SJLJ

# Specify commit hash in version string
DEFINES += -DXASH_BUILD_COMMIT=\"$(XASH_COMMIT)\"

ifeq ($(ASYNC),1)
DEFINES += -DEMSCRIPTEN_ASYNC
CXX += -s ASYNCIFY=1
else
DEFINES += -DNO_SJLJ
endif
ifneq ($(64BIT),1)
DEFINES += -DXASH_FASTSTR
endif
ifeq ($(XASH_DEDICATED),1)
    DEFINES += -DXASH_DEDICATED
else
   DEFINES += -DXASH_SDL
   LIBS += -pthread
endif

ifeq ($(NANOGL),1)
DEFINES += -DXASH_NANOGL -DXASH -D__MULTITEXTURE_SUPPORT__  -DEGL_LIB=\"libEGL.so\"
endif
ifeq ($(WES),1)
DEFINES +=  -DXASH_WES -D__MULTITEXTURE_SUPPORT__  -DEGL_LIB=\"libEGL.so\"
endif
# Some libc implementations cannot use libdl, so disable it by default
ifeq ($(XASH_STATIC),1)

    ifneq ($(XASH_STATIC_LIBDL),1)
	DEFINES += -DNO_LIBDL
    endif

    XASH_SINGLE_BINARY := 1
endif

ifeq ($(XASH_DLL_LOADER),1)
	DEFINES += -DDLL_LOADER
    ifeq ($(XASH_SINGLE_BINARY),1)
	LIBS += libloader.a -pthread -lm
    else
	LIBS += libloader.so
    endif
endif

ifeq ($(XASH_SINGLE_BINARY),1)
    DEFINES += -DSINGLE_BINARY
endif

ifeq ($(XASH_VGUI),1)
    DEFINES += -DXASH_VGUI
endif


SRCS_CPP =
SRCS_C =

#ifeq ($(XASH_VGUI),1)
#    SRCS_CPP += $(wildcard client/vgui/*.cpp)
#endif

ifeq ($(NANOGL),1)
SRCS_CPP += $(wildcard nanogl/*.cpp)
endif
ifeq ($(WES),1)
SRCS += $(wildcard gl-wes-v2/src/*.c)
endif
OBJS_CPP = $(patsubst %.cpp,obj/%.o,$(SRCS_CPP))
SRCS += $(wildcard server/*.c) $(wildcard client/vgui/*.c) $(wildcard common/*.c) $(wildcard common/imagelib/*.c) $(wildcard common/soundlib/*.c) $(wildcard common/soundlib/libmpg/*.c)
ifneq ($(XASH_DEDICATED),1)
SRCS += $(wildcard client/*.c)
SRCS += $(wildcard platform/sdl/*.c)
endif
OBJS = $(patsubst %.c,obj/%.o,$(SRCS))

$(OUTPUT_DIR)/xash$(SIMD_SUF).html: $(OBJS) $(OBJS_CPP) platform/emscripten/shell.html
	EMCC_FORCE_STDLIBS=1 $(CXX) -O3 --js-opts 1 -s INLINING_LIMIT=10 -s ELIMINATE_DUPLICATE_FUNCTIONS=1 -s AGGRESSIVE_VARIABLE_ELIMINATION=1 -s LEGACY_GL_CREATE_RESOURCE_ON_BIND=1 -s UNALIGNED_ACCESS_FUNCTION_LIST=\"platform/emscripten/unaligned.txt\"  --shell-file platform/emscripten/shell.html -s NO_EXIT_RUNTIME=0 -s LZ4=1 -s -g0 -o "$@" -s MAIN_MODULE=1 -s TOTAL_MEMORY=150994944 -fvisibility=hidden $(LDFLAGS) $(OBJS) $(OBJS_CPP) $(LIBS)



DIRS := obj obj/server obj/client/vgui obj/common/sdl obj/common/imagelib obj/common/soundlib/libmpg obj/platform/sdl obj/nanogl obj/gl-wes-v2/src $(OUTPUT_DIR)


$(OBJS): | $(DIRS)

$(DIRS) :
	mkdir -p $(DIRS)
obj/%.o : %.c
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -c "$<" -o "$@"  -Wno-unused-result -fvisibility=hidden

obj/%.o : %.cpp
	$(CXX) $(CFLAGS) $(INCLUDES) $(DEFINES) -c "$<" -o "$@"


default: $(BINARIES)

.PHONY: depend clean list install

clean:
	$(RM) $(OBJS) $(OBJS_CPP) $(BINARIES)

list:
	@echo Sources:
	@echo $(SRCS)
	@echo C++ Sources:
	@echo $(SRCS_CPP)
	@echo Objects:
	@echo $(OBJS) $(OBJS_CPP)
