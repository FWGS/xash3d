CC = gcc -g
CXX ?= g++
CFLAGS ?= -O2 -march=native -fno-omit-frame-pointer -ggdb -funsigned-char -Wall -Wextra -Wsign-compare -Wno-unknown-pragmas -Wno-missing-field-initializers -Wno-unused-parameter -Wno-unused-but-set-variable
LDFLAGS =
LIBS = -lm
LBITS := $(shell getconf LONG_BIT)
ifneq ($(64BIT),1)
	ifeq ($(LBITS),64)
		LDFLAGS += -m32
		CFLAGS += -m32
	endif
endif
TOPDIR = $(PWD)/..
INCLUDES :=
XASH_SINGLE_BINARY ?= 1
XASH_X11 ?= 1
INSTALL_DIR ?= ./install/
ifeq ($(NANOGL),1)
INCLUDES += -Inanogl -Inanogl/GL
endif
INCLUDES += -I/usr/include/SDL2 -Icommon -I../common -I. -I../pm_shared -Iclient -Iserver -Iclient/vgui -Icommon/sdl

DEFINES = -DUSE_SELECT -DCOLORIZE_CONSOLE -DDEBUGNAN -DXASH_FORCEINLINE -DGDB_BREAK
ifneq ($(64BIT),1)
DEFINES += -DXASH_FASTSTR
endif
ifeq ($(XASH_DEDICATED),1)
    DEFINES += -DXASH_DEDICATED
else
   DEFINES += -DXASH_SDL
   LIBS += -lSDL2 -pthread
ifeq ($(XASH_X11),1)
	   LIBS += -lX11
	   DEFINES += -DXASH_X11
endif
endif

ifeq ($(NANOGL),1)
DEFINES += -DXASH_GLES -DXASH_NANOGL -D__MULTITEXTURE_SUPPORT__  -DEGL_LIB=\"libEGL.so\"
endif
# Some libc implementations cannot use libdl, so disable it by default
ifeq ($(XASH_STATIC),1)

    ifneq ($(XASH_STATIC_LIBDL),1)
	DEFINES += -DNO_LIBDL
    endif

    XASH_SINGLE_BINARY := 1
endif

ifneq ($(XASH_STATIC),1)
    LIBS += -ldl
endif

ifeq ($(XASH_STATIC_LIBDL),1)
    LIBS += -ldl
endif
ifeq ($(XASH_DLL_LOADER),1)
	DEFINES += -DDLL_LOADER
    ifeq ($(XASH_SINGLE_BINARY),1)
	LIBS += libloader.a -pthread -lm
    else
	LIBS += libloader.so
    endif
endif

ifeq ($(XASH_SINGLE_BINARY),1)
    DEFINES += -DSINGLE_BINARY
endif

ifeq ($(XASH_VGUI),1)
    DEFINES += -DXASH_VGUI
endif


SRCS_CPP =

#ifeq ($(XASH_VGUI),1)
#    SRCS_CPP += $(wildcard client/vgui/*.cpp)
#endif

ifeq ($(NANOGL),1)
SRCS_CPP += $(wildcard nanogl/*.cpp)
endif
OBJS_CPP = $(patsubst %.cpp,obj/%.o,$(SRCS_CPP))
SRCS = $(wildcard server/*.c) $(wildcard client/vgui/*.c) $(wildcard common/*.c) $(wildcard common/imagelib/*.c) $(wildcard common/soundlib/*.c) $(wildcard common/soundlib/libmpg/*.c)
ifneq ($(XASH_DEDICATED),1)
SRCS += $(wildcard client/*.c)
SRCS += $(wildcard platform/sdl/*.c)
endif
OBJS = $(patsubst %.c,obj/%.o,$(SRCS))
ifeq ($(XASH_SINGLE_BINARY),0)
BINARIES = libxash.so
libxash.so : $(OBJS) $(OBJS_CPP)
ifeq ($(XASH_DLL_LOADER),1)
	cp $(TOPDIR)/loader/libloader.so .
endif
	$(CC) -fvisibility=hidden -o libxash.so $(LDFLAGS) -shared $(OBJS) $(OBJS_CPP) $(LIBS) 

else
BINARIES = xash
xash: $(OBJS) $(OBJS_CPP)

    ifeq ($(XASH_STATIC),1)
	$(CC) -o xash -static $(LDFLAGS) $(OBJS) $(OBJS_CPP) $(LIBS)
    else
	$(CC) -o xash -fvisibility=hidden $(LDFLAGS) $(OBJS) $(OBJS_CPP) $(LIBS)
    endif

endif


DIRS := obj obj/server obj/client/vgui obj/common/sdl obj/common/imagelib obj/common/soundlib/libmpg obj/platform/sdl obj/nanogl


$(OBJS): | $(DIRS)

$(DIRS) :
	mkdir -p $(DIRS)
obj/%.o : %.c
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -c "$<" -o "$@"  -Wno-unused-result -fvisibility=hidden

obj/%.o : %.cpp
	$(CXX) $(CFLAGS) $(INCLUDES) $(DEFINES) -c "$<" -o "$@"


default: $(BINARIES)

.PHONY: depend clean list install

clean:
	$(RM) $(OBJS) $(OBJS_CPP) $(BINARIES)

list:
	@echo Sources:
	@echo $(SRCS)
	@echo C++ Sources:
	@echo $(SRCS_CPP)
	@echo Objects:
	@echo $(OBJS) $(OBJS_CPP)

install: $(BINARIES)

	mkdir -p $(INSTALL_DIR)

ifeq ($(XASH_SINGLE_BINARY),1)
	cp xash $(INSTALL_DIR)/xash_bin
else
	cp libxash.so $(INSTALL_DIR)/
	cp libloader.so $(INSTALL_DIR)/
endif
